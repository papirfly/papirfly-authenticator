{
    "env": {
        "browser": true,
        "es6": true,
        "jasmine": true
    },
    "ignorePatterns": [
        "*.js",
        "dist/",
        "*.d.ts",
        "node_modules/"
    ],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:jasmine/recommended"
    ],
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 2018,
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint",
        "jasmine"
    ],
    "rules": {
        "camelcase": "off",
        "no-unused-vars": "off",
        "no-case-declarations": "off",
        "no-control-regex": 0,
        "no-unreachable": "warn",
        "no-async-promise-executor": "off",
        "semi": "off",
        "@typescript-eslint/semi": [
            "error",
            "always"
        ],
        "no-extra-semi": "off",
        "@typescript-eslint/no-extra-semi": [
            "error"
        ],
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/camelcase": "off",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "interface",
                "format": [
                    "PascalCase"
                ],
                "custom": {
                    "regex": "^I[A-Z]",
                    "match": true
                }
            }
        ],
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-unused-vars": "off",
        // if we have a setter, there must be a getter
        "accessor-pairs": [
            "error",
            {
                "enforceForClassMembers": true
            }
        ],
        "array-bracket-newline": [
            "error",
            "consistent"
        ],
        "multiline-ternary": [
            "error",
            "always-multiline"
        ],
        "no-console": [
            "warn",
            {
                "allow": [
                    "warn",
                    "error"
                ]
            }
        ],
        "no-lonely-if": "error",
        "no-nested-ternary": "error",
        "@typescript-eslint/member-delimiter-style": "error",
        "@typescript-eslint/no-parameter-properties": "error",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/unified-signatures": "error",
        "jasmine/new-line-before-expect": "off",
        "jasmine/no-disabled-tests": "off",
        "jasmine/no-focused-tests": "warn"
    },
    "overrides": [
        {
            "files": [
                "*Defs.ts"
            ],
            "rules": {
                "object-curly-newline": "off"
            }
        }
    ]
}